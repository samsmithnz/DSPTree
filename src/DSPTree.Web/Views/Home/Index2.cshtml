@model string
@{
    ViewData["Title"] = "Home Page";
}

<h2>Index</h2>

@*From: https://bl.ocks.org/mbostock/950642 *@
<!DOCTYPE html>
<meta charset="utf-8">
<style>

    .link {
        stroke: #ccc;
    }

    .node text {
        pointer-events: none;
        font: 10px sans-serif;
    }

</style>
<body>
    @*<script src="https://d3js.org/d3.v3.min.js"></script>*@
    <script src="~/lib/d3v3/d3.min.js"></script>
    <script>

            //var json = JSON.parse(@Html.Raw(Model));
            //var json2 = JSON.parse('{"nodes":[{"name":"id1","group":1},{"name":"id3","group":3},{"name":"id2","group":2},{"name":"id4","group":2},{"name":"id5","group":2},{"name":"id6","group":1},{"name":"id7","group":1}],"links":[{"source":1,"target":2,"value":1},{"source":1,"target":3,"value":1},{"source":3,"target":4,"value":1},{"source":4,"target":6,"value":1},{"source":4,"target":6,"value":1},{"source":4,"target":3,"value":1}]}');
            var json2 = @Html.Raw(Model);

            var width = 1200,
                height = 800

            var svg = d3.select("body").append("svg")
                .attr("width", width)
                .attr("height", height);

            var force = d3.layout.force()
                .gravity(0.05)
                .distance(100)
                .charge(-100)
                .size([width, height]);

            d3.json("graph.json", function(error, json) {
              if (error) throw error;

              console.log(json.links[0]);
              console.log(json2.links[0]);
              console.log(json.nodes[0]);
              console.log(json2.nodes[0]);
              json = json2;

              force
                  .nodes(json.nodes)
                  .links(json.links)
                  .start();

              var link = svg.selectAll(".link")
                  .data(json.links)
                .enter().append("line")
                  .attr("class", "link");

              var node = svg.selectAll(".node")
                  .data(json.nodes)
                .enter().append("g")
                  .attr("class", "node")
                  .call(force.drag);

              node.append("image")
                  .attr("xlink:href", function(d) {return "images/" + d.image})
                  .attr("x", -8)
                  .attr("y", -8)
                  .attr("width", 20)
                  .attr("height", 20);

              //node.append("text")
              //    .attr("dx", 12)
              //    .attr("dy", ".35em")
              //    .text(function(d) { return d.name });

            node.append("title")
                .text(function (d) { return d.name; }); //.Replace('_',' ')

              force.on("tick", function() {
                link.attr("x1", function(d) { return d.source.x; })
                    .attr("y1", function(d) { return d.source.y; })
                    .attr("x2", function(d) { return d.target.x; })
                    .attr("y2", function(d) { return d.target.y; });

                node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
              });
            });

        //var myJson = '{"nodes":[{"id":"id1","group":1},{"id":"id3","group":3},{"id":"id2","group":2},{"id":"id4","group":2},{"id":"id5","group":2},{"id":"id6","group":1},{"id":"id7","group":1}],"links":[{"source":"id1","target":"id2","value":1},{"source":"id1","target":"id3","value":1},{"source":"id3","target":"id4","value":1},{"source":"id4","target":"id5","value":1},{"source":"id4","target":"id6","value":1},{"source":"id4","target":"id7","value":1}]}';
        //var graph = JSON.parse(myJson);
        //var graph = @Html.Raw(Model);
        //console.log(graph);
        //UpdateGraph(graph)

    </script>

</body>